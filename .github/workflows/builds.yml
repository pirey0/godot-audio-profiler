name: Build GDExtension
on:
  workflow_dispatch:
  push:
    tags: ["v*"]

env:
  LIBNAME: audio-profiler

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            { platform: linux, arch: x86_64, os: ubuntu-22.04 },
            { platform: windows, arch: x86_64, os: windows-latest },
            { platform: macos, arch: universal, os: macos-latest },
          ]
        target-type: [template_debug] #, template_release]
        float-precision: [single] #, double]


    runs-on: ${{ matrix.target.os }}
    steps:
      # Clone this repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      # Setup dependencies
      - name: Setup godot-cpp
        uses: ./godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.target.platform }}
          em-version: 3.1.62

      # Build GDExtension (with caches)
      #- name: Restore .scons_cache
      #  uses: ./godot-cpp/.github/actions/godot-cache-restore
      #  with:
      #    scons-cache: ${{ github.workspace }}/.scons-cache/
      #    cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}

      - name: Build GDExtension
        shell: sh
        #env:
        #  SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
        run: |
          scons target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }} precision=${{ matrix.float-precision }}

      #- name: Save .scons_cache
      #  uses: ./godot-cpp/.github/actions/godot-cache-save
      #  with:
      #    scons-cache: ${{ github.workspace }}/.scons-cache/
      #    cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}

      # Clean up compilation files
      - name: Windows - Delete compilation files
        if: ${{ matrix.target.platform == 'windows' }}
        shell: pwsh
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      # Upload the build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: audio-profiler-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}
          path: |
            ${{ github.workspace }}/bin/**

  # Merges all the build artifacts together into a single godot-cpp-template artifact.
  # If you comment out this step, all the builds will be uploaded individually.
  merge:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: audio-profiler
          pattern: audio-profiler-*
          delete-merged: true